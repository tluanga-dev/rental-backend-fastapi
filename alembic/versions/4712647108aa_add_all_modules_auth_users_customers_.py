"""Add all modules: auth, users, customers, suppliers, inventory, transactions, rentals, analytics, system, master_data

Revision ID: 4712647108aa
Revises: d5e1f1b1963b
Create Date: 2025-07-11 00:12:55.869248

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4712647108aa'
down_revision: Union[str, None] = 'd5e1f1b1963b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_location_city', table_name='locations')
    op.drop_index('idx_location_code', table_name='locations')
    op.drop_index('idx_location_country', table_name='locations')
    op.drop_index('idx_location_manager', table_name='locations')
    op.drop_index('idx_location_name', table_name='locations')
    op.drop_index('idx_location_state', table_name='locations')
    op.drop_index('idx_location_type', table_name='locations')
    op.drop_index('ix_locations_is_active', table_name='locations')
    op.drop_index('ix_locations_location_code', table_name='locations')
    op.drop_table('locations')
    op.drop_index('idx_supplier_code', table_name='suppliers')
    op.drop_index('idx_supplier_company_name', table_name='suppliers')
    op.drop_index('idx_supplier_contract_dates', table_name='suppliers')
    op.drop_index('idx_supplier_email', table_name='suppliers')
    op.drop_index('idx_supplier_last_order', table_name='suppliers')
    op.drop_index('idx_supplier_payment_terms', table_name='suppliers')
    op.drop_index('idx_supplier_ratings', table_name='suppliers')
    op.drop_index('idx_supplier_status', table_name='suppliers')
    op.drop_index('idx_supplier_tier', table_name='suppliers')
    op.drop_index('idx_supplier_type', table_name='suppliers')
    op.drop_index('ix_suppliers_company_name', table_name='suppliers')
    op.drop_index('ix_suppliers_email', table_name='suppliers')
    op.drop_index('ix_suppliers_is_active', table_name='suppliers')
    op.drop_index('ix_suppliers_supplier_code', table_name='suppliers')
    op.drop_table('suppliers')
    op.drop_index('idx_unit_abbreviation_active', table_name='units')
    op.drop_index('idx_unit_name_active', table_name='units')
    op.drop_index('ix_units_abbreviation', table_name='units')
    op.drop_index('ix_units_is_active', table_name='units')
    op.drop_index('ix_units_name', table_name='units')
    op.drop_table('units')
    op.drop_index('idx_category_active_leaf', table_name='categories')
    op.drop_index('idx_category_display_order', table_name='categories')
    op.drop_index('idx_category_level', table_name='categories')
    op.drop_index('idx_category_parent', table_name='categories')
    op.drop_index('idx_category_parent_order', table_name='categories')
    op.drop_index('idx_category_path', table_name='categories')
    op.drop_index('ix_categories_category_path', table_name='categories')
    op.drop_index('ix_categories_is_active', table_name='categories')
    op.drop_index('uk_category_name_parent', table_name='categories')
    op.drop_table('categories')
    op.drop_index('idx_brand_code_active', table_name='brands')
    op.drop_index('idx_brand_name_active', table_name='brands')
    op.drop_index('ix_brands_code', table_name='brands')
    op.drop_index('ix_brands_is_active', table_name='brands')
    op.drop_index('ix_brands_name', table_name='brands')
    op.drop_table('brands')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brands',
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='Brand name'),
    sa.Column('code', sa.VARCHAR(length=20), autoincrement=False, nullable=True, comment='Unique brand code'),
    sa.Column('id', sa.CHAR(length=36), autoincrement=False, nullable=False, comment='Primary key'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who deleted the record'),
    sa.Column('description', sa.VARCHAR(length=1000), autoincrement=False, nullable=True, comment='Description'),
    sa.PrimaryKeyConstraint('id', name='brands_pkey')
    )
    op.create_index('ix_brands_name', 'brands', ['name'], unique=True)
    op.create_index('ix_brands_is_active', 'brands', ['is_active'], unique=False)
    op.create_index('ix_brands_code', 'brands', ['code'], unique=True)
    op.create_index('idx_brand_name_active', 'brands', ['name', 'is_active'], unique=False)
    op.create_index('idx_brand_code_active', 'brands', ['code', 'is_active'], unique=False)
    op.create_table('categories',
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='Category name'),
    sa.Column('parent_category_id', sa.CHAR(length=36), autoincrement=False, nullable=True, comment='Parent category ID'),
    sa.Column('category_path', sa.VARCHAR(length=500), autoincrement=False, nullable=False, comment='Full category path'),
    sa.Column('category_level', sa.INTEGER(), autoincrement=False, nullable=False, comment='Hierarchy level'),
    sa.Column('display_order', sa.INTEGER(), autoincrement=False, nullable=False, comment='Display order within parent'),
    sa.Column('is_leaf', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='True if category has no children'),
    sa.Column('id', sa.CHAR(length=36), autoincrement=False, nullable=False, comment='Primary key'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who deleted the record'),
    sa.ForeignKeyConstraint(['parent_category_id'], ['categories.id'], name='categories_parent_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='categories_pkey')
    )
    op.create_index('uk_category_name_parent', 'categories', ['name', 'parent_category_id'], unique=True)
    op.create_index('ix_categories_is_active', 'categories', ['is_active'], unique=False)
    op.create_index('ix_categories_category_path', 'categories', ['category_path'], unique=False)
    op.create_index('idx_category_path', 'categories', ['category_path'], unique=False)
    op.create_index('idx_category_parent_order', 'categories', ['parent_category_id', 'display_order'], unique=False)
    op.create_index('idx_category_parent', 'categories', ['parent_category_id'], unique=False)
    op.create_index('idx_category_level', 'categories', ['category_level'], unique=False)
    op.create_index('idx_category_display_order', 'categories', ['display_order'], unique=False)
    op.create_index('idx_category_active_leaf', 'categories', ['is_active', 'is_leaf'], unique=False)
    op.create_table('units',
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='Unit name'),
    sa.Column('abbreviation', sa.VARCHAR(length=10), autoincrement=False, nullable=True, comment='Unit abbreviation'),
    sa.Column('id', sa.CHAR(length=36), autoincrement=False, nullable=False, comment='Primary key'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who deleted the record'),
    sa.Column('description', sa.VARCHAR(length=1000), autoincrement=False, nullable=True, comment='Description'),
    sa.PrimaryKeyConstraint('id', name='units_pkey')
    )
    op.create_index('ix_units_name', 'units', ['name'], unique=True)
    op.create_index('ix_units_is_active', 'units', ['is_active'], unique=False)
    op.create_index('ix_units_abbreviation', 'units', ['abbreviation'], unique=True)
    op.create_index('idx_unit_name_active', 'units', ['name', 'is_active'], unique=False)
    op.create_index('idx_unit_abbreviation_active', 'units', ['abbreviation', 'is_active'], unique=False)
    op.create_table('suppliers',
    sa.Column('supplier_code', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='Unique supplier code'),
    sa.Column('company_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='Supplier company name'),
    sa.Column('supplier_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='Type of supplier'),
    sa.Column('contact_person', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Primary contact person'),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Supplier email address'),
    sa.Column('phone', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='Supplier phone number'),
    sa.Column('mobile', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='Supplier mobile number'),
    sa.Column('address_line1', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Primary address line'),
    sa.Column('address_line2', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Secondary address line'),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='City'),
    sa.Column('state', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='State/Province'),
    sa.Column('postal_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True, comment='Postal/ZIP code'),
    sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=True, comment='Country'),
    sa.Column('tax_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='Tax identification number'),
    sa.Column('payment_terms', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='Payment terms'),
    sa.Column('credit_limit', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=False, comment='Credit limit amount'),
    sa.Column('supplier_tier', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='Supplier tier'),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='Supplier status'),
    sa.Column('quality_rating', sa.NUMERIC(precision=3, scale=2), autoincrement=False, nullable=False, comment='Quality rating (0-5)'),
    sa.Column('delivery_rating', sa.NUMERIC(precision=3, scale=2), autoincrement=False, nullable=False, comment='Delivery rating (0-5)'),
    sa.Column('average_delivery_days', sa.INTEGER(), autoincrement=False, nullable=False, comment='Average delivery time in days'),
    sa.Column('total_orders', sa.INTEGER(), autoincrement=False, nullable=False, comment='Total number of orders'),
    sa.Column('total_spend', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=False, comment='Total amount spent'),
    sa.Column('last_order_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Date of last order'),
    sa.Column('contract_start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Contract start date'),
    sa.Column('contract_end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Contract end date'),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True, comment='Additional notes'),
    sa.Column('website', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Supplier website'),
    sa.Column('account_manager', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Account manager name'),
    sa.Column('preferred_payment_method', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='Preferred payment method'),
    sa.Column('insurance_expiry', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Insurance expiry date'),
    sa.Column('certifications', sa.TEXT(), autoincrement=False, nullable=True, comment='Certifications held'),
    sa.Column('id', sa.CHAR(length=36), autoincrement=False, nullable=False, comment='Primary key'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who deleted the record'),
    sa.PrimaryKeyConstraint('id', name='suppliers_pkey')
    )
    op.create_index('ix_suppliers_supplier_code', 'suppliers', ['supplier_code'], unique=True)
    op.create_index('ix_suppliers_is_active', 'suppliers', ['is_active'], unique=False)
    op.create_index('ix_suppliers_email', 'suppliers', ['email'], unique=False)
    op.create_index('ix_suppliers_company_name', 'suppliers', ['company_name'], unique=False)
    op.create_index('idx_supplier_type', 'suppliers', ['supplier_type'], unique=False)
    op.create_index('idx_supplier_tier', 'suppliers', ['supplier_tier'], unique=False)
    op.create_index('idx_supplier_status', 'suppliers', ['status'], unique=False)
    op.create_index('idx_supplier_ratings', 'suppliers', ['quality_rating', 'delivery_rating'], unique=False)
    op.create_index('idx_supplier_payment_terms', 'suppliers', ['payment_terms'], unique=False)
    op.create_index('idx_supplier_last_order', 'suppliers', ['last_order_date'], unique=False)
    op.create_index('idx_supplier_email', 'suppliers', ['email'], unique=False)
    op.create_index('idx_supplier_contract_dates', 'suppliers', ['contract_start_date', 'contract_end_date'], unique=False)
    op.create_index('idx_supplier_company_name', 'suppliers', ['company_name'], unique=False)
    op.create_index('idx_supplier_code', 'suppliers', ['supplier_code'], unique=False)
    op.create_table('locations',
    sa.Column('location_code', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='Unique location code'),
    sa.Column('location_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='Location name'),
    sa.Column('location_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='Location type'),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=False, comment='Street address'),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='City'),
    sa.Column('state', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='State/Province'),
    sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='Country'),
    sa.Column('postal_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True, comment='Postal/ZIP code'),
    sa.Column('contact_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True, comment='Phone number'),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Email address'),
    sa.Column('manager_user_id', sa.CHAR(length=36), autoincrement=False, nullable=True, comment='Manager user ID'),
    sa.Column('id', sa.CHAR(length=36), autoincrement=False, nullable=False, comment='Primary key'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Record creation timestamp'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Record last update timestamp'),
    sa.Column('created_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who created the record'),
    sa.Column('updated_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who last updated the record'),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='Soft delete flag'),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='Soft delete timestamp'),
    sa.Column('deleted_by', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='User who deleted the record'),
    sa.PrimaryKeyConstraint('id', name='locations_pkey')
    )
    op.create_index('ix_locations_location_code', 'locations', ['location_code'], unique=True)
    op.create_index('ix_locations_is_active', 'locations', ['is_active'], unique=False)
    op.create_index('idx_location_type', 'locations', ['location_type'], unique=False)
    op.create_index('idx_location_state', 'locations', ['state'], unique=False)
    op.create_index('idx_location_name', 'locations', ['location_name'], unique=False)
    op.create_index('idx_location_manager', 'locations', ['manager_user_id'], unique=False)
    op.create_index('idx_location_country', 'locations', ['country'], unique=False)
    op.create_index('idx_location_code', 'locations', ['location_code'], unique=False)
    op.create_index('idx_location_city', 'locations', ['city'], unique=False)
    # ### end Alembic commands ###