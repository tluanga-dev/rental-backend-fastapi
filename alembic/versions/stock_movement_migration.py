"""Add stock movement tracking and update stock levels

Revision ID: stock_movement_001
Revises: e8eac0a5d19a
Create Date: 2025-07-15 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers
revision = 'stock_movement_001'
down_revision = 'e8eac0a5d19a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, modify the stock_levels table
    # Remove obsolete columns
    op.drop_column('stock_levels', 'quantity_reserved')
    op.drop_column('stock_levels', 'quantity_on_order')
    op.drop_column('stock_levels', 'minimum_level')
    op.drop_column('stock_levels', 'maximum_level')
    op.drop_column('stock_levels', 'reorder_point')
    
    # Change quantity columns from String to Numeric with explicit casting
    op.alter_column('stock_levels', 'quantity_on_hand',
                   existing_type=sa.String(length=10),
                   type_=sa.Numeric(precision=10, scale=2),
                   existing_nullable=False,
                   existing_default='0',
                   postgresql_using='quantity_on_hand::numeric(10,2)')
    
    op.alter_column('stock_levels', 'quantity_available',
                   existing_type=sa.String(length=10),
                   type_=sa.Numeric(precision=10, scale=2),
                   existing_nullable=False,
                   existing_default='0',
                   postgresql_using='quantity_available::numeric(10,2)')
    
    # Add new quantity_on_rent column
    op.add_column('stock_levels', 
                  sa.Column('quantity_on_rent', 
                           sa.Numeric(precision=10, scale=2), 
                           nullable=False, 
                           default=0, 
                           comment="Quantity currently on rent"))
    
    # Create stock_movements table
    op.create_table('stock_movements',
        sa.Column('id', sa.CHAR(36), nullable=False, comment='Primary key'),
        sa.Column('stock_level_id', sa.CHAR(36), nullable=False, comment='Stock level ID'),
        sa.Column('item_id', sa.CHAR(36), nullable=False, comment='Item ID'),
        sa.Column('location_id', sa.CHAR(36), nullable=False, comment='Location ID'),
        sa.Column('movement_type', sa.String(length=50), nullable=False, comment='Type of movement'),
        sa.Column('reference_type', sa.String(length=50), nullable=False, comment='Type of reference'),
        sa.Column('reference_id', sa.String(length=100), nullable=True, comment='External reference ID'),
        sa.Column('quantity_change', sa.Numeric(precision=10, scale=2), nullable=False, comment='Quantity change (+/-)'),
        sa.Column('quantity_before', sa.Numeric(precision=10, scale=2), nullable=False, comment='Quantity before movement'),
        sa.Column('quantity_after', sa.Numeric(precision=10, scale=2), nullable=False, comment='Quantity after movement'),
        sa.Column('reason', sa.String(length=500), nullable=False, comment='Reason for movement'),
        sa.Column('notes', sa.Text(), nullable=True, comment='Additional notes'),
        sa.Column('transaction_line_id', sa.CHAR(36), nullable=True, comment='Transaction line reference'),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True, comment='Creation timestamp'),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True, comment='Last update timestamp'),
        sa.Column('created_by', sa.CHAR(36), nullable=True, comment='Created by user ID'),
        sa.Column('updated_by', sa.CHAR(36), nullable=True, comment='Updated by user ID'),
        sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False, comment='Active status'),
        sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
        sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
        sa.ForeignKeyConstraint(['stock_level_id'], ['stock_levels.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Create indexes for stock_movements
    op.create_index('idx_stock_movement_stock_level', 'stock_movements', ['stock_level_id'])
    op.create_index('idx_stock_movement_item', 'stock_movements', ['item_id'])
    op.create_index('idx_stock_movement_location', 'stock_movements', ['location_id'])
    op.create_index('idx_stock_movement_type', 'stock_movements', ['movement_type'])
    op.create_index('idx_stock_movement_reference', 'stock_movements', ['reference_type', 'reference_id'])
    op.create_index('idx_stock_movement_created', 'stock_movements', ['created_at'])
    op.create_index('idx_stock_movement_item_created', 'stock_movements', ['item_id', 'created_at'])
    op.create_index('idx_stock_movement_stock_created', 'stock_movements', ['stock_level_id', 'created_at'])
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop stock_movements table and indexes
    op.drop_index('idx_stock_movement_stock_created', table_name='stock_movements')
    op.drop_index('idx_stock_movement_item_created', table_name='stock_movements')
    op.drop_index('idx_stock_movement_created', table_name='stock_movements')
    op.drop_index('idx_stock_movement_reference', table_name='stock_movements')
    op.drop_index('idx_stock_movement_type', table_name='stock_movements')
    op.drop_index('idx_stock_movement_location', table_name='stock_movements')
    op.drop_index('idx_stock_movement_item', table_name='stock_movements')
    op.drop_index('idx_stock_movement_stock_level', table_name='stock_movements')
    op.drop_table('stock_movements')
    
    # Remove quantity_on_rent column
    op.drop_column('stock_levels', 'quantity_on_rent')
    
    # Revert quantity columns back to String with explicit casting
    op.alter_column('stock_levels', 'quantity_available',
                   existing_type=sa.Numeric(precision=10, scale=2),
                   type_=sa.String(length=10),
                   existing_nullable=False,
                   existing_default='0',
                   postgresql_using='quantity_available::varchar(10)')
    
    op.alter_column('stock_levels', 'quantity_on_hand',
                   existing_type=sa.Numeric(precision=10, scale=2),
                   type_=sa.String(length=10),
                   existing_nullable=False,
                   existing_default='0',
                   postgresql_using='quantity_on_hand::varchar(10)')
    
    # Add back obsolete columns
    op.add_column('stock_levels', sa.Column('reorder_point', sa.String(length=10), nullable=False, default='0', comment='Reorder point'))
    op.add_column('stock_levels', sa.Column('maximum_level', sa.String(length=10), nullable=False, default='0', comment='Maximum stock level'))
    op.add_column('stock_levels', sa.Column('minimum_level', sa.String(length=10), nullable=False, default='0', comment='Minimum stock level'))
    op.add_column('stock_levels', sa.Column('quantity_on_order', sa.String(length=10), nullable=False, default='0', comment='Quantity on order'))
    op.add_column('stock_levels', sa.Column('quantity_reserved', sa.String(length=10), nullable=False, default='0', comment='Reserved quantity'))
    
    # ### end Alembic commands ###