#!/bin/bash

# Core Migration Testing - Focus on rental field migration
echo "üîç CORE RENTAL MIGRATION VALIDATION"
echo "=================================="

# Test 1: Database schema validation
echo "Testing database schema changes..."
echo "1. TransactionHeader rental fields removed:"
HEADER_COUNT=$(docker-compose exec -T db psql -U fastapi_user -d fastapi_db -t -c "
SELECT COUNT(*) FROM information_schema.columns 
WHERE table_name = 'transaction_headers' 
AND column_name IN ('rental_start_date', 'rental_end_date', 'current_rental_status');")

echo "   Rental fields in headers: $HEADER_COUNT (should be 0)"
[ "$HEADER_COUNT" -eq 0 ] && echo "   ‚úÖ PASSED" || echo "   ‚ùå FAILED"

echo ""
echo "2. TransactionLine rental fields added:"
LINE_COUNT=$(docker-compose exec -T db psql -U fastapi_user -d fastapi_db -t -c "
SELECT COUNT(*) FROM information_schema.columns 
WHERE table_name = 'transaction_lines' 
AND column_name = 'current_rental_status';")

echo "   current_rental_status in lines: $LINE_COUNT (should be 1)"
[ "$LINE_COUNT" -eq 1 ] && echo "   ‚úÖ PASSED" || echo "   ‚ùå FAILED"

echo ""
echo "3. Enum validation:"
RENTAL_STATUS_COUNT=$(docker-compose exec -T db psql -U fastapi_user -d fastapi_db -t -c "
SELECT COUNT(*) FROM pg_enum 
WHERE enumtypid = (SELECT oid FROM pg_type WHERE typname = 'rentalstatus');")

echo "   RentalStatus enum values: $RENTAL_STATUS_COUNT (should be 6)"
[ "$RENTAL_STATUS_COUNT" -eq 6 ] && echo "   ‚úÖ PASSED" || echo "   ‚ùå FAILED"

PERIOD_UNIT_COUNT=$(docker-compose exec -T db psql -U fastapi_user -d fastapi_db -t -c "
SELECT COUNT(*) FROM pg_enum 
WHERE enumtypid = (SELECT oid FROM pg_type WHERE typname = 'rentalperiodunit');")

echo "   RentalPeriodUnit enum values: $PERIOD_UNIT_COUNT (should be 4)"
[ "$PERIOD_UNIT_COUNT" -eq 4 ] && echo "   ‚úÖ PASSED" || echo "   ‚ùå FAILED"

echo ""
echo "4. OpenAPI Schema validation:"
echo "   Checking TransactionHeaderResponse..."
HEADER_RENTAL_FIELDS=$(curl -s http://localhost:8000/openapi.json | jq -r '.components.schemas.TransactionHeaderResponse.properties | keys[]' | grep -E "(rental_start_date|rental_end_date|current_rental_status)" | wc -l)
echo "   Rental fields in header schema: $HEADER_RENTAL_FIELDS (should be 0)"
[ "$HEADER_RENTAL_FIELDS" -eq 0 ] && echo "   ‚úÖ PASSED" || echo "   ‚ùå FAILED"

echo "   Checking TransactionLineResponse..."
LINE_RENTAL_STATUS=$(curl -s http://localhost:8000/openapi.json | jq -e '.components.schemas.TransactionLineResponse.properties.current_rental_status' > /dev/null 2>&1 && echo "1" || echo "0")
echo "   current_rental_status in line schema: $LINE_RENTAL_STATUS (should be 1)"
[ "$LINE_RENTAL_STATUS" -eq 1 ] && echo "   ‚úÖ PASSED" || echo "   ‚ùå FAILED"

echo ""
echo "5. Model functionality test:"
docker-compose exec -T app python -c "
import sys
sys.path.append('/app')

print('Testing model imports and functionality...')
try:
    # Test imports
    from app.modules.transactions.models.transaction_headers import TransactionHeader, RentalStatus
    from app.modules.transactions.models.transaction_lines import TransactionLine, RentalPeriodUnit
    from app.modules.transactions.schemas.main import TransactionHeaderResponse, TransactionLineResponse
    print('   ‚úÖ All imports successful')
    
    # Test enum values
    rental_statuses = [s.value for s in RentalStatus]
    expected_statuses = ['ACTIVE', 'LATE', 'EXTENDED', 'PARTIAL_RETURN', 'LATE_PARTIAL_RETURN', 'COMPLETED']
    assert set(rental_statuses) == set(expected_statuses), f'RentalStatus mismatch: {rental_statuses}'
    print('   ‚úÖ RentalStatus enum correct')
    
    period_units = [u.value for u in RentalPeriodUnit]
    expected_units = ['HOUR', 'DAY', 'WEEK', 'MONTH']
    assert set(period_units) == set(expected_units), f'RentalPeriodUnit mismatch: {period_units}'
    print('   ‚úÖ RentalPeriodUnit enum correct')
    
    # Test computed properties exist
    assert hasattr(TransactionHeader, 'rental_start_date'), 'Missing rental_start_date property'
    assert hasattr(TransactionHeader, 'rental_end_date'), 'Missing rental_end_date property'
    assert hasattr(TransactionHeader, 'current_rental_status'), 'Missing current_rental_status property'
    print('   ‚úÖ Backward compatibility properties exist')
    
    print('   üéâ ALL MODEL TESTS PASSED!')
    
except Exception as e:
    print(f'   ‚ùå Model test failed: {e}')
    import traceback
    traceback.print_exc()
"

echo ""
echo "=================================="
echo "üèÅ MIGRATION VALIDATION COMPLETE"
echo "=================================="
echo ""
echo "Summary of Changes:"
echo "‚Ä¢ Moved rental fields from TransactionHeader to TransactionLine"
echo "‚Ä¢ Added current_rental_status field with RentalStatus enum"
echo "‚Ä¢ Updated rental_period_unit to use RentalPeriodUnit enum"
echo "‚Ä¢ Maintained backward compatibility via computed properties"
echo "‚Ä¢ Updated Pydantic schemas to reflect new structure"
echo "‚Ä¢ Created appropriate database indexes"
echo ""
echo "‚úÖ Core migration functionality is working correctly!"